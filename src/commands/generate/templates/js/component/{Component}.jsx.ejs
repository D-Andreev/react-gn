<% if(withHooks){ %>
    import React, { useState, useEffect, useReducer } from 'react';
    import simpleReducer from './path/to/your/reducer';
<% } else{ %>
    import React from 'react';
<% } %>
<% if (withPropTypes) { %>
    import PropTypes from 'prop-types';
<% } %>
<% if (withStyledComponents) { %>
    import StyledComponent from './Styled<%= component %>.js';
<% } %>
import './<%= component %>.styles.css';

function <%= component %>({children}) {
<% if (withHooks) { %>
    const [count, setCount] = useState(0);
    const [result] = useReducer(simpleReducer);

    useEffect(() => {
        document.title = `You clicked ${count} times`;
    });
<% } %>

return (
<% if(withStyledComponents){ %>
    <StyledComponent>
<% } else{ %>
    <div>
<% } %>
<% if(withHooks){ %>
    <p>You clicked {count} times</p>
    <button onClick={() => setCount(count + 1)}>
    Click me
    </button>
    <pre>
        {result}
    </pre>
<% } else{ %>
    <div>
        <%= component %>
    </div>
<% } %>
<% if(withStyledComponents){ %>
    </StyledComponent>
<% } else{ %>
    </div>
<% } %>
);
}
<% if (withPropTypes) { %>
    <%= component %>.propTypes = {
    children: PropTypes.element
    };
<% } %>

export default React.memo(<%= component %>);
