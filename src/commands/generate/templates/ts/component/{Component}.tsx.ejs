<% if(withHooks){ %>
    import React, { useState, useEffect, useReducer } from 'react';
    import simpleReducer from './path/to/your/reducer';
<% } else{ %>
    import React from 'react';
<% } %>
<% if (withStyledComponents) { %>
    import StyledComponent from './Styled<%= component %>.js';
<% } %>
import './<%= component %>.styles.css';

interface <%= component %>Props {
    children: JSX.Element[] | JSX.Element
}
const <%= component %>: React.FC<<%= component %>Props> = ({children}) => {
<% if (withHooks) { %>
    const [count, setCount] = useState(0);
    const [result] = useReducer(simpleReducer);

    useEffect(() => {
    document.title = `You clicked ${count} times`;
    });
<% } %>

return (
<% if(withStyledComponents){ %>
    <StyledComponent>
<% } else{ %>
    <div>
<% } %>
<% if(withHooks){ %>
        <p>You clicked {count} times</p>
        <button onClick={() => setCount(count + 1)} primary>
        Click me
        </button>
        <pre>
            {result}
        </pre>
<% } else{ %>
    <div>
        <%= component %>
    </div>
<% } %>
<% if(withStyledComponents){ %>
    </StyledComponent>
<% } else{ %>
    </div>
<% } %>
);
}

export default React.memo(<%= component %>);
